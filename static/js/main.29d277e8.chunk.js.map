{"version":3,"sources":["components/lights/Bulb.js","components/lights/Lights.js","components/Floor.js","components/Background.js","components/Orbit.js","components/Dragable.js","components/car/Model.js","components/car/BoundingBox.js","components/car/Cars.js","state.js","components/CameraControls.js","components/CameraButtons.js","components/Effects.js","App.js","reportWebVitals.js","index.js"],"names":["Bulb","props","ref","useRef","scene","useThree","useEffect","lights","push","castShadow","args","emissive","Lights","intensity","position","Floor","useBox","receiveShadow","transparent","opacity","Box","texture","useLoader","THREE","process","gl","formatted","useMemo","image","height","fromEquirectangularTexture","attach","object","extend","OrbitControls","Orbit","camera","domElement","DragControls","Dragable","useState","children","setChildren","groupRef","controlsRef","current","addEventListener","orbitControls","enabled","e","console","log","api","mass","set","copy","velocity","transformGroup","Model","mixer","model","GLTFLoader","path","animations","length","forEach","animation","clipAction","play","useFrame","delta","update","traverse","child","isMesh","recieveShadow","material","side","scale","BoundingBox","offset","dims","visible","wireframe","Cars","fallback","rotation","Math","PI","Array","fill","state","activeMesh","cameraPos","target","shouldUpdate","CameraControls","lerp","clone","sub","style","zIndex","bottom","width","textAlign","fontSize","fontWeight","background","borderRadius","border","cursor","CameraButtons","sets","clickHandler","num","onClick","left","right","Effects","setLights","focusDistance","focalLength","bokehScale","App","powerPreference","antialias","stencil","depth","shadowMap","Background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29d277e8.chunk.js","sourcesContent":["import { useRef, useEffect } from \"react\";\r\nimport { useThree } from \"react-three-fiber\";\r\n\r\nconst Bulb = (props) => {\r\n  const ref = useRef();\r\n  const { scene } = useThree();\r\n\r\n  useEffect(() => {\r\n    if (scene.lights) scene.lights.push(ref);\r\n    else scene.lights = [ref];\r\n  }, []);\r\n\r\n  return (\r\n    <mesh {...props} ref={ref}>\r\n      <pointLight\r\n        castShadow\r\n        shadow-mapSize-height={2 ** 10}\r\n        shadow-mapSize-width={2 ** 10}\r\n        shadow-radius={10}\r\n      />\r\n      <sphereBufferGeometry args={[0.2, 20, 20]} />\r\n      <meshPhysicalMaterial emissive=\"white\" />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Bulb;\r\n","import Bulb from \"./Bulb\";\r\n\r\nconst Lights = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.2} />\r\n      <directionalLight\r\n        position={[6, 3, 0]}\r\n        intensity={2}\r\n        castShadow\r\n        shadow-mapSize-height={2 ** 10}\r\n        shadow-mapSize-width={2 ** 10}\r\n      />\r\n      <Bulb position={[-6, 3, 0]} />\r\n      <Bulb position={[0, 3, 0]} />\r\n      <Bulb position={[6, 3, 0]} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n","import { useBox } from \"use-cannon\";\r\n\r\nconst Floor = (props) => {\r\n  const [ref, api] = useBox(() => ({ args: [20, 1, 10], ...props }));\r\n  return (\r\n    <mesh ref={ref} {...props} receiveShadow>\r\n      <boxBufferGeometry args={[200, 1, 200]} />\r\n      <meshPhysicalMaterial transparent opacity={0.2} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Floor;\r\n","import { useMemo } from \"react\";\r\nimport { useLoader, useThree } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Box = (props) => {\r\n  const texture = useLoader(\r\n    THREE.TextureLoader,\r\n    process.env.PUBLIC_URL + \"/autoshop.jpg\"\r\n  );\r\n\r\n  const { gl } = useThree();\r\n  const formatted = useMemo(\r\n    () =>\r\n      new THREE.WebGLCubeRenderTarget(\r\n        texture.image.height\r\n      ).fromEquirectangularTexture(gl, texture),\r\n    [gl, texture]\r\n  );\r\n\r\n  return <primitive attach=\"background\" object={formatted} />;\r\n};\r\n\r\nexport default Box;\r\n","import { useThree, extend } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst Orbit = () => {\r\n  const { camera, gl } = useThree();\r\n  return (\r\n    <orbitControls attach=\"orbitControls\" args={[camera, gl.domElement]} />\r\n  );\r\n};\r\n\r\nexport default Orbit;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { DragControls } from \"three/examples/jsm/controls/DragControls\";\r\nimport { useThree, extend } from \"react-three-fiber\";\r\nextend({ DragControls });\r\n\r\nconst Dragable = (props) => {\r\n  const [children, setChildren] = useState([]);\r\n  const groupRef = useRef();\r\n  const controlsRef = useRef();\r\n  const { camera, gl, scene } = useThree();\r\n\r\n  useEffect(() => {\r\n    setChildren(groupRef.current.children);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    controlsRef.current.addEventListener(\r\n      \"hoveron\",\r\n      () => (scene.orbitControls.enabled = false)\r\n    );\r\n    controlsRef.current.addEventListener(\r\n      \"hoveroff\",\r\n      () => (scene.orbitControls.enabled = true)\r\n    );\r\n    controlsRef.current.addEventListener(\"dragstart\", (e) => {\r\n      console.log(e.object);\r\n      e.object.api?.mass.set(0);\r\n    });\r\n    controlsRef.current.addEventListener(\"dragend\", (e) =>\r\n      e.object.api?.mass.set(1)\r\n    );\r\n    controlsRef.current.addEventListener(\"drag\", (e) => {\r\n      e.object.api?.position.copy(e.object.position);\r\n      e.object.api?.velocity.set(0, 0, 0);\r\n    });\r\n  }, [children, scene]);\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <dragControls\r\n        transformGroup={props.transformGroup}\r\n        ref={controlsRef}\r\n        args={[children, camera, gl.domElement]}\r\n      />\r\n      {props.children}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Dragable;\r\n","import { useLoader, useFrame } from \"react-three-fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Model = (props) => {\r\n  const model = useLoader(GLTFLoader, process.env.PUBLIC_URL + props.path);\r\n\r\n  let mixer;\r\n  if (model.animations.length > 0) {\r\n    mixer = new THREE.AnimationMixer(model.scene);\r\n    model.animations.forEach((animation) => {\r\n      const action = mixer.clipAction(animation);\r\n      action.play();\r\n    });\r\n  }\r\n\r\n  useFrame((scene, delta) => mixer?.update(delta));\r\n\r\n  model.scene.traverse((child) => {\r\n    if (child.isMesh) {\r\n      child.castShadow = true;\r\n      child.recieveShadow = true;\r\n      child.material.side = THREE.FrontSide;\r\n    }\r\n  });\r\n\r\n  return <primitive object={model.scene} scale={props.scale} />;\r\n};\r\n\r\nexport default Model;\r\n","import { useBox } from \"use-cannon\";\r\n\r\nconst BoundingBox = ({\r\n  position = [0, 0, 0],\r\n  offset = [0, 0, 0],\r\n  dims = [1, 1, 1],\r\n  visible = false,\r\n  children,\r\n}) => {\r\n  const [ref, api] = useBox(() => ({ mass: 1, args: dims, position }));\r\n\r\n  return (\r\n    <group ref={ref} api={api}>\r\n      <mesh visible={visible} scale={dims}>\r\n        <boxBufferGeometry />\r\n        <meshBasicMaterial wireframe />\r\n      </mesh>\r\n      <group position={offset}>{children}</group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default BoundingBox;\r\n","import { Suspense } from \"react\";\r\n\r\nimport Dragable from \"../Dragable\";\r\nimport Model from \"./Model\";\r\nimport BoundingBox from \"./BoundingBox\";\r\n\r\nconst Cars = () => {\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <group rotation={[0, Math.PI, 0]}>\r\n        <Dragable transformGroup>\r\n          <BoundingBox\r\n            position={[-4, 1, 0]}\r\n            dims={[3, 1.5, 6]}\r\n            offset={[0, -0.05, 0]}\r\n          >\r\n            <Model\r\n              path=\"/tesla_model_3/scene.gltf\"\r\n              scale={new Array(3).fill(0.01)}\r\n            />\r\n          </BoundingBox>\r\n        </Dragable>\r\n        <Dragable transformGroup>\r\n          <BoundingBox\r\n            position={[4, 1, 0]}\r\n            dims={[3, 1.5, 6]}\r\n            offset={[0, 0, 0]}\r\n          >\r\n            <Model\r\n              path=\"/tesla_model_s/scene.gltf\"\r\n              scale={new Array(3).fill(1.1)}\r\n            />\r\n          </BoundingBox>\r\n        </Dragable>\r\n      </group>\r\n      <Dragable transformGroup>\r\n        <BoundingBox position={[0, 1, 0]} dims={[1, 2, 1]} offset={[0, -1, 0]}>\r\n          <Model path=\"/tesla_bot/scene.gltf\" scale={new Array(3).fill(1)} />\r\n        </BoundingBox>\r\n      </Dragable>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Cars;\r\n","import * as THREE from \"three\";\r\nconst state = {\r\n  activeMesh: null,\r\n  cameraPos: new THREE.Vector3(7, 2, 4),\r\n  target: new THREE.Vector3(4, 0, 0),\r\n  shouldUpdate: true,\r\n};\r\n\r\nexport default state;\r\n","import { useFrame } from \"react-three-fiber\";\r\nimport state from \"../state\";\r\n\r\nconst CameraControls = () => {\r\n  useFrame(({ camera, scene }) => {\r\n    if (state.shouldUpdate) {\r\n      camera.position.lerp(state.cameraPos, 0.1);\r\n      scene.orbitControls.target.lerp(state.target, 0.1);\r\n      scene.orbitControls.update();\r\n\r\n      const diff = camera.position.clone().sub(state.cameraPos).length();\r\n      if (diff < 0.1) state.shouldUpdate = false;\r\n    }\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default CameraControls;\r\n","import state from \"../state\";\r\n\r\nconst style = {\r\n  zIndex: 1,\r\n  position: \"absolute\",\r\n  bottom: \"30vh\",\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  textAlign: \"center\",\r\n  fontSize: \"20px\",\r\n  fontWeight: \"bold\",\r\n  background: \"white\",\r\n  borderRadius: \"100px\",\r\n  border: \"1px solid black\",\r\n  opacity: 0.7,\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst CameraButtons = () => {\r\n  const sets = {\r\n    1: {\r\n      cameraPos: [9, 2, 4],\r\n      target: [4, 0, 0],\r\n    },\r\n    2: {\r\n      cameraPos: [1, 2, 3],\r\n      target: [-4, 0, 0],\r\n    },\r\n  };\r\n\r\n  const clickHandler = (num) => {\r\n    state.cameraPos.set(...sets[num].cameraPos);\r\n    state.target.set(...sets[num].target);\r\n    state.shouldUpdate = true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={(e) => clickHandler(2)}\r\n        style={{\r\n          left: \"40vw\",\r\n          ...style,\r\n        }}\r\n      >\r\n        {\"<\"}\r\n      </button>\r\n      <button\r\n        onClick={(e) => clickHandler(1)}\r\n        style={{\r\n          right: \"40vw\",\r\n          ...style,\r\n        }}\r\n      >\r\n        {\">\"}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CameraButtons;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useThree } from \"react-three-fiber\";\r\nimport { EffectComposer, DepthOfField, GodRays } from \"react-postprocessing\";\r\n\r\nconst Effects = () => {\r\n  const [lights, setLights] = useState([]);\r\n  const { scene } = useThree();\r\n\r\n  useEffect(() => {\r\n    if (scene.lights && scene.lights.length === 3) setLights(scene.lights);\r\n  }, [scene.lights]);\r\n\r\n  return lights ? (\r\n    <EffectComposer>\r\n      <DepthOfField\r\n        focusDistance={0}\r\n        focalLength={0.03}\r\n        bokehScale={2}\r\n        height={480}\r\n      />\r\n      {/* {lights.map((light) => {\r\n        return (\r\n          <GodRays\r\n            key={light.current.uuid}\r\n            sun={light.current}\r\n          />\r\n        );\r\n      })} */}\r\n    </EffectComposer>\r\n  ) : null;\r\n};\r\n\r\nexport default Effects;\r\n","import \"./App.css\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { Suspense } from \"react\";\r\nimport { Physics } from \"use-cannon\";\r\n\r\n//Components\r\nimport Lights from \"./components/lights/Lights\";\r\nimport Floor from \"./components/Floor\";\r\nimport Background from \"./components/Background\";\r\nimport Orbit from \"./components/Orbit\";\r\nimport Cars from \"./components/car/Cars\";\r\nimport CameraControls from \"./components/CameraControls\";\r\nimport CameraButtons from \"./components/CameraButtons\";\r\nimport Effects from \"./components/Effects\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\r\n      <CameraButtons />\r\n      <Canvas\r\n        gl={{\r\n          powerPreference: \"high-performance\",\r\n          antialias: false,\r\n          stencil: false,\r\n          depth: false,\r\n        }}\r\n        shadowMap\r\n        style={{ background: \"black\" }}\r\n        camera={{ position: [7, 7, 7] }}\r\n      >\r\n        <CameraControls />\r\n        <Suspense fallback={null}>\r\n          <Background />\r\n        </Suspense>\r\n        <Lights />\r\n        <Orbit />\r\n        <axesHelper args={[5]} />\r\n        <Physics>\r\n          <Cars />\r\n          <Floor position={[0, -0.5, 0]} />\r\n        </Physics>\r\n        <Effects />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}